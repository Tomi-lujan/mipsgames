# Car Dodge Game - Sprite ROJO completo + movimiento adelante/atrás
# SETUP:
#    Tools -> Bitmap Display:
#    Unit Width: 4, Unit Height: 4
#    Display Width: 256, Display Height: 512
#    Base: 0x10008000 ($gp)
#    Connect to MIPS
# 3. Tools -> Keyboard MMIO -> Connect to MIPS
# 4. Run -> Assemble (F3)
# 5. Run -> Go (F5)
#
# CONTROLES:
# A - Izquierda
# D - Derecha  
# W - Adelante (acelerar)
# S - Atrás (frenar)
# Q - Salir

.data
    display: .word 0x10008000
   
    # Colores del auto ROJO (tu sprite)
    colorBlack: .word 0x000000
    colorRed1: .word 0xFF0000      # Rojo brillante del cuerpo
    colorRed2: .word 0xB40000      # Rojo medio
    colorRed3: .word 0x8B0000      # Rojo oscuro
    colorGray1: .word 0x464646     # Gris ruedas
    colorGray2: .word 0x2E2E2E     # Gris oscuro
    colorBlue: .word 0x0000FF      # Azul para ventanas/detalles
    colorWhite: .word 0xFFFFFF
   
    carX: .word 28        # X del auto (centrado)
    carLane: .word 1      # 0=izq, 1=centro, 2=derecha
    carY: .word 50        # Y del auto
    carSpeed: .word 0     # Velocidad del auto (0-3)
   
    obsX: .word 28        # X del obstáculo
    obsY: .word 0         # Y inicial
    obsSpeed: .word 1     # Velocidad base del obstáculo
    
    # Nuevos obstáculos
    obs2X: .word 28       # X del segundo obstáculo (que ralentiza)
    obs2Y: .word -30      # Y inicial del segundo obstáculo
    obs2Type: .word 2     # Tipo 2 = obstáculo que ralentiza
    
    obs3X: .word 28       # X del tercer obstáculo (normal)
    obs3Y: .word -60      # Y inicial del tercer obstáculo
    obs3Type: .word 1     # Tipo 1 = obstáculo normal
   
    score: .word 0
    lives: .word 3
   
    minX: .word 4
    maxX: .word 56
    minY: .word 10
    maxY: .word 58
    
    lane0X: .word 13      # X del carril izquierdo (más a la izquierda)
    lane1X: .word 32      # X del carril centro (centrado en pantalla)
    lane2X: .word 51      # X del carril derecho (más a la derecha)
    
    obsLane0X: .word 5     # Carril izq: 13 (centro auto) - 8 (mitad cono) = 5
    obsLane1X: .word 24    # Carril centro: 32 - 8 = 24
    obsLane2X: .word 43    # Carril derecho: 51 - 8 = 43
    
    # Variables para efectos temporales
    slowEffectTimer: .word 0  # Temporizador para efecto de ralentización
    slowEffectDuration: .word 60  # Duración del efecto en frames

.text
main:
    li $s0, 0x10008000
    
    # Dibujar fondo gris una sola vez
    li $a0, 0x10008000
    li $a1, 0x5d5d5d
    jal fillScreen
    
    # Dibujar bordes azules
    li $t0, 0
borderLoop:
    li $a0, 0
    move $a1, $t0
    li $a2, 0x0000DA
    jal setPixel
    li $a0, 1
    jal setPixel
    li $a0, 62
    jal setPixel
    li $a0, 63
    jal setPixel
    addi $t0, $t0, 1
    li $t1, 128
    blt $t0, $t1, borderLoop
    li $s0, 0x10008000
    
    # Inicializar carril en centro (carril 1)
    li $t0, 1
    sw $t0, carLane
    
    # Cargar posición correcta del carril centro
    lw $s1, lane1X
    sw $s1, carX          # Actualizar carX también
    
    lw $s2, carY
    # Inicializar primer obstáculo en carril centro (centrado)
    lw $s3, obsLane1X
    sw $s3, obsX
    lw $s4, obsY
    lw $s5, carSpeed

loop:
    # Actualizar contador de frames para mejor aleatoriedad
    lw $t9, frameCounter
    addi $t9, $t9, 1
    sw $t9, frameCounter
    
    # Si randomSeed está sin inicializar (0), inicializa con frameCounter
    lw $t9, randomSeed
    bne $t9, 0, skipSeedInit
    lw $t9, frameCounter
    sw $t9, randomSeed
skipSeedInit:
    
    # Actualizar efecto de ralentización
    lw $t0, slowEffectTimer
    beqz $t0, noSlowEffect
    addi $t0, $t0, -1
    sw $t0, slowEffectTimer
noSlowEffect:

    # === FASE 1: CALCULAR (sin dibujar nada) ===
    # Mover obstáculo 1
    lw $t8, carSpeed
    addi $t8, $t8, 2
    add $s4, $s4, $t8
    sw $s4, obsY
    
    # Mover obstáculo 2 (que ralentiza)
    lw $t0, obs2Y
    add $t0, $t0, $t8
    sw $t0, obs2Y
    
    # Mover obstáculo 3 (normal)
    lw $t1, obs3Y
    add $t1, $t1, $t8
    sw $t1, obs3Y
    
    # Reset obstáculo 1
    li $t0, 128
    blt $s4, $t0, skipReset1
    
    li $s4, -8
    sw $s4, obsY
    
    lw $t0, score
    addi $t0, $t0, 1
    sw $t0, score
    
    # Mezclar semilla con frameCounter y posición Y para más aleatoriedad
    lw $t8, randomSeed
    lw $t9, frameCounter
    xor $t8, $t8, $t9
    lw $t7, obsY
    add $t8, $t8, $t7
    sw $t8, randomSeed

    # Elegir tipo aleatorio (0 = cono, 1 = piedra)
    li $a0, 2
    jal getRandom
    sw $v0, obsType

    # Elegir carril aleatorio (0 = izq, 1 = centro, 2 = derecha)
    lw $t8, randomSeed
    lw $t9, frameCounter
    sll $t9, $t9, 3          # Mezcla extra
    xor $t8, $t8, $t9
    sw $t8, randomSeed
    li $a0, 3
    jal getRandom
    move $t1, $v0

    beq $t1, 0, setXFarLeft
    beq $t1, 1, setXLeft
    beq $t1, 2, setXRight
    
    j skipReset1

setXFarLeft:
    lw $s3, obsLane0X
    sw $s3, obsX
    j skipReset1
    
setXLeft:
    lw $s3, obsLane1X
    sw $s3, obsX
    j skipReset1
    
setXRight:
    lw $s3, obsLane2X
    sw $s3, obsX

skipReset1:
    # Reset obstáculo 2
    lw $t0, obs2Y
    li $t1, 128
    blt $t0, $t1, skipReset2
    
    li $t0, -30
    sw $t0, obs2Y
    
    # Elegir carril aleatorio para obstáculo 2
    li $a0, 3
    jal getRandom
    move $t1, $v0
    
    beq $t1, 0, setXFarLeft2
    beq $t1, 1, setXLeft2
    beq $t1, 2, setXRight2
    j skipReset2

setXFarLeft2:
    lw $t0, obsLane0X
    sw $t0, obs2X
    j skipReset2
    
setXLeft2:
    lw $t0, obsLane1X
    sw $t0, obs2X
    j skipReset2
    
setXRight2:
    lw $t0, obsLane2X
    sw $t0, obs2X

skipReset2:
    # Reset obstáculo 3
    lw $t0, obs3Y
    li $t1, 128
    blt $t0, $t1, skipReset3
    
    li $t0, -60
    sw $t0, obs3Y
    
    # Elegir carril aleatorio para obstáculo 3
    li $a0, 3
    jal getRandom
    move $t1, $v0
    
    beq $t1, 0, setXFarLeft3
    beq $t1, 1, setXLeft3
    beq $t1, 2, setXRight3
    j skipReset3

setXFarLeft3:
    lw $t0, obsLane0X
    sw $t0, obs3X
    j skipReset3
    
setXLeft3:
    lw $t0, obsLane1X
    sw $t0, obs3X
    j skipReset3
    
setXRight3:
    lw $t0, obsLane2X
    sw $t0, obs3X

skipReset3:
    # === FASE 2: DIBUJAR TODO DE UN TIRÓN ===
    jal updateScroll
    jal drawTrack         # Dibuja fondo
    
    # Dibujar obstáculos PRIMERO
    move $a0, $s3
    move $a1, $s4
    jal drawObstacle
    
    # Dibujar obstáculo 2 (que ralentiza)
    lw $a0, obs2X
    lw $a1, obs2Y
    li $a2, 2            # Tipo 2 = obstáculo que ralentiza
    jal drawSpecialObstacle
    
    # Dibujar obstáculo 3 (normal)
    lw $a0, obs3X
    lw $a1, obs3Y
    li $a2, 1            # Tipo 1 = obstáculo normal
    jal drawSpecialObstacle
    
    # Dibujar auto DESPUÉS (queda arriba)
    move $a0, $s1
    move $a1, $s2
    jal drawCarSprite32
    
    # Dibujar HUD
    jal drawHearts
    jal drawScore
    
    # Mostrar efecto de ralentización si está activo
    lw $t0, slowEffectTimer
    beqz $t0, noSlowDisplay
    jal drawSlowEffect
noSlowDisplay:

    # === FASE 3: INPUT ===
    li $t0, 0xffff0000
    lw $t1, 0($t0)
    andi $t1, $t1, 1
    beq $t1, 0, noKey
    
    lw $t1, 4($t0)
    beq $t1, 'a', moveLeft
    beq $t1, 'A', moveLeft
    beq $t1, 'd', moveRight
    beq $t1, 'D', moveRight
    beq $t1, 'w', moveUp
    beq $t1, 'W', moveUp
    beq $t1, 's', moveDown
    beq $t1, 'S', moveDown
    beq $t1, 'q', exit
    beq $t1, 'Q', exit
    j noKey

moveLeft:
    lw $t2, carLane
    beqz $t2, noKey
    addi $t2, $t2, -1
    sw $t2, carLane
    
    beq $t2, 0, setLane0
    beq $t2, 1, setLane1
    j noKey

setLane0:
    lw $t3, lane0X
    sw $t3, carX
    move $s1, $t3
    j noKey
    
setLane1:
    lw $t3, lane1X
    sw $t3, carX
    move $s1, $t3
    j noKey
    
moveRight:
    lw $t2, carLane
    li $t3, 2
    bge $t2, $t3, noKey
    addi $t2, $t2, 1
    sw $t2, carLane
    
    beq $t2, 1, setLane1Right
    beq $t2, 2, setLane2
    j noKey

setLane1Right:
    lw $t3, lane1X
    sw $t3, carX
    move $s1, $t3
    j noKey
    
setLane2:
    lw $t3, lane2X
    sw $t3, carX
    move $s1, $t3
    j noKey

moveUp:
    lw $t2, carSpeed
    li $t3, 3
    bge $t2, $t3, noKey
    addi $t2, $t2, 1
    sw $t2, carSpeed
    move $s5, $t2
    j noKey

moveDown:
    lw $t2, carSpeed
    blez $t2, noKey
    addi $t2, $t2, -1
    sw $t2, carSpeed
    move $s5, $t2
    j noKey

noKey:
    # === FASE 4: COLISIONES ===
    # Colisión con obstáculo 1 (normal)
    bltz $s4, noCol1
    li $t0, 128
    bge $s4, $t0, noCol1
    
    move $t0, $s1
    addi $t0, $t0, -10
    move $t1, $s1
    addi $t1, $t1, 10
    move $t2, $s2
    addi $t2, $t2, 5
    move $t3, $s2
    addi $t3, $t3, 27
    
    move $t4, $s3
    addi $t4, $t4, 2
    move $t5, $s3
    addi $t5, $t5, 14
    move $t6, $s4
    addi $t6, $t6, 2
    move $t7, $s4
    addi $t7, $t7, 14
    
    bge $t0, $t5, noCol1
    ble $t1, $t4, noCol1
    bge $t2, $t7, noCol1
    ble $t3, $t6, noCol1
    
    j collision1

collision1:
    lw $t0, lives
    addi $t0, $t0, -1
    sw $t0, lives
    
    li $v0, 4
    la $a0, hitMsg
    syscall
    
    li $v0, 1
    move $a0, $t0
    syscall
    
    li $v0, 4
    la $a0, newlineMsg
    syscall
    
    beqz $t0, exit
    
    li $s4, -20
    sw $s4, obsY
    
    # Generar tipo aleatorio: 0 o 1
    li $a0, 2           # Rango: 0 a 1
    jal getRandom
    sw $v0, obsType     # Guardar el resultado
    
    # Generar carril aleatorio: 0, 1 o 2
    li $a0, 3           # Rango: 0 a 2
    jal getRandom
    move $t1, $v0       # t1 = carril aleatorio (0, 1 o 2)
    
    beq $t1, 0, collSetXFarLeft
    beq $t1, 1, collSetXLeft
    beq $t1, 2, collSetXRight
    j noCol1

collSetXFarLeft:
    lw $s3, obsLane0X
    sw $s3, obsX
    j noCol1
    
collSetXLeft:
    lw $s3, obsLane1X
    sw $s3, obsX
    j noCol1
    
collSetXRight:
    lw $s3, obsLane2X
    sw $s3, obsX

noCol1:
    # Colisión con obstáculo 2 (que ralentiza)
    lw $t0, obs2Y
    bltz $t0, noCol2
    li $t1, 128
    bge $t0, $t1, noCol2
    
    move $t2, $s1
    addi $t2, $t2, -10
    move $t3, $s1
    addi $t3, $t3, 10
    move $t4, $s2
    addi $t4, $t4, 5
    move $t5, $s2
    addi $t5, $t5, 27
    
    lw $t6, obs2X
    addi $t6, $t6, 2
    lw $t7, obs2X
    addi $t7, $t7, 14
    lw $t8, obs2Y
    addi $t8, $t8, 2
    lw $t9, obs2Y
    addi $t9, $t9, 14
    
    bge $t2, $t7, noCol2
    ble $t3, $t6, noCol2
    bge $t4, $t9, noCol2
    ble $t5, $t8, noCol2
    
    j collision2

collision2:
    # Aplicar efecto de ralentización
    lw $t0, slowEffectDuration
    sw $t0, slowEffectTimer
    
    # Reducir velocidad temporalmente
    lw $t0, carSpeed
    blez $t0, noSlowSpeed
    addi $t0, $t0, -1
    sw $t0, carSpeed
noSlowSpeed:

    # Reset obstáculo 2
    li $t0, -30
    sw $t0, obs2Y
    
    # Generar carril aleatorio para obstáculo 2
    li $a0, 3
    jal getRandom
    move $t1, $v0
    
    beq $t1, 0, collSetXFarLeft2
    beq $t1, 1, collSetXLeft2
    beq $t1, 2, collSetXRight2
    j noCol2

collSetXFarLeft2:
    lw $t0, obsLane0X
    sw $t0, obs2X
    j noCol2
    
collSetXLeft2:
    lw $t0, obsLane1X
    sw $t0, obs2X
    j noCol2
    
collSetXRight2:
    lw $t0, obsLane2X
    sw $t0, obs2X

noCol2:
    # Colisión con obstáculo 3 (normal)
    lw $t0, obs3Y
    bltz $t0, noCol3
    li $t1, 128
    bge $t0, $t1, noCol3
    
    move $t2, $s1
    addi $t2, $t2, -10
    move $t3, $s1
    addi $t3, $t3, 10
    move $t4, $s2
    addi $t4, $t4, 5
    move $t5, $s2
    addi $t5, $t5, 27
    
    lw $t6, obs3X
    addi $t6, $t6, 2
    lw $t7, obs3X
    addi $t7, $t7, 14
    lw $t8, obs3Y
    addi $t8, $t8, 2
    lw $t9, obs3Y
    addi $t9, $t9, 14
    
    bge $t2, $t7, noCol3
    ble $t3, $t6, noCol3
    bge $t4, $t9, noCol3
    ble $t5, $t8, noCol3
    
    j collision3

collision3:
    lw $t0, lives
    addi $t0, $t0, -1
    sw $t0, lives
    
    li $v0, 4
    la $a0, hitMsg
    syscall
    
    li $v0, 1
    move $a0, $t0
    syscall
    
    li $v0, 4
    la $a0, newlineMsg
    syscall
    
    beqz $t0, exit
    
    li $t0, -60
    sw $t0, obs3Y
    
    # Generar carril aleatorio para obstáculo 3
    li $a0, 3
    jal getRandom
    move $t1, $v0
    
    beq $t1, 0, collSetXFarLeft3
    beq $t1, 1, collSetXLeft3
    beq $t1, 2, collSetXRight3
    j noCol3

collSetXFarLeft3:
    lw $t0, obsLane0X
    sw $t0, obs3X
    j noCol3
    
collSetXLeft3:
    lw $t0, obsLane1X
    sw $t0, obs3X
    j noCol3
    
collSetXRight3:
    lw $t0, obsLane2X
    sw $t0, obs3X

noCol3:
    # Delay más agresivo
    li $t0, 50000
delayLoop:
    addi $t0, $t0, -1
    bgtz $t0, delayLoop
    
    j loop

exit:
    li $v0, 4
    la $a0, exitMsg
    syscall
    li $v0, 10
    syscall

# Función para dibujar obstáculos especiales (tipos 1 y 2)
# $a0 = X, $a1 = Y, $a2 = tipo (1=normal, 2=ralentizador)
drawSpecialObstacle:
    addi $sp, $sp, -8
    sw $ra, 0($sp)
    sw $s6, 4($sp)
   
    move $s6, $a0        # Guardar X
    move $s7, $a1        # Guardar Y
    move $t0, $a2        # Guardar tipo
    
    beq $t0, 2, drawSlowObstacle
    
    # Dibujar obstáculo normal (piedra)
    move $a0, $s6
    move $a1, $s7
    la $a2, piedra_data
    jal drawSprite16Scaled
    j endDrawSpecialObstacle
    
drawSlowObstacle:
    # Dibujar obstáculo que ralentiza (color diferente)
    move $a0, $s6
    move $a1, $s7
    la $a2, slow_obstacle_data
    jal drawSprite16Scaled
   
endDrawSpecialObstacle:
    lw $ra, 0($sp)
    lw $s6, 4($sp)
    addi $sp, $sp, 8
    jr $ra

# Función para mostrar efecto de ralentización en pantalla
drawSlowEffect:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

fillScreen:
    move $t0, $a0
    move $t1, $a1
    li $t2, 8192
fillLoop:
    sw $t1, 0($t0)
    addi $t0, $t0, 4
    addi $t2, $t2, -1
    bgtz $t2, fillLoop
    jr $ra

clearScreen:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    
    li $a0, 0x10008000
    li $a1, 0x000000        # Negro
    jal fillScreen
    
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

updateScroll:
    lw $t0, scrollOffset
    lw $t1, carSpeed
    
    # Scroll más suave
    addi $t0, $t0, 1        # Era 2, ahora 1 (más suave)
    
    # Agregar velocidad del auto
    add $t0, $t0, $t1
    
    # Loop cuando llega a 64
    li $t2, 64
loopCheck:
    blt $t0, $t2, saveScroll
    sub $t0, $t0, $t2
    j loopCheck
    
saveScroll:
    sw $t0, scrollOffset
    jr $ra

drawTrack:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    
    lw $t9, scrollOffset    # Cargar offset actual
    
    # Sprite 1: Arriba (puede estar parcialmente fuera)
    li $a0, 0               # X = 0
    move $a1, $t9           # Y = offset
    addi $a1, $a1, -64      # Restar 64 para que empiece arriba
    jal drawPista64Simple
    
    # Sprite 2: Centro
    li $a0, 0
    move $a1, $t9           # Y = offset
    jal drawPista64Simple
    
    # Sprite 3: Abajo
    li $a0, 0
    move $a1, $t9
    addi $a1, $a1, 64       # Sumar 64 para que esté abajo
    jal drawPista64Simple
    
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

drawPista64Simple:
    addi $sp, $sp, -24
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
   
    move $s0, $a0           # X inicial
    move $s1, $a1           # Y inicial
   
    la $s2, pista64_data
    li $s3, 0               # fila

rowLoop:
    add $s4, $s1, $s3       # Y_pantalla
    
    # Clipping vertical
    bltz $s4, skipRow
    li $t0, 128
    bge $s4, $t0, endSprite
    
    # Calcular dirección base de la fila UNA SOLA VEZ
    li $t2, 0x10008000
    move $t3, $s4
    sll $t3, $t3, 6         # Y * 64 (optimizado)
    add $t3, $t3, $s0
    sll $t3, $t3, 2
    add $t2, $t2, $t3       # Dirección base de la fila
    
    li $s5, 0               # columna

colLoop:
    lw $t0, 0($s2)          # RGBA
    srl $t1, $t0, 24        # Alpha
    
    # SI alpha = 0, dibujar NEGRO (esto borra el fondo)
    beqz $t1, drawBlack
    andi $t0, $t0, 0x00FFFFFF   # RGB
    j drawIt
    
drawBlack:
    li $t0, 0x000000        # Negro
    
drawIt:
    # Dibujar directamente
    sw $t0, 0($t2)
    addi $t2, $t2, 4        # Siguiente píxel

    addi $s2, $s2, 4
    addi $s5, $s5, 1
    li $t0, 64
    blt $s5, $t0, colLoop
    j nextRow

skipRow:
    addi $s2, $s2, 256      # Saltar fila

nextRow:
    addi $s3, $s3, 1
    li $t0, 64
    blt $s3, $t0, rowLoop

endSprite:
    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    addi $sp, $sp, 24
    jr $ra

drawCarRed:
    addi $sp, $sp, -8
    sw $ra, 0($sp)
    sw $s6, 4($sp)
   
    move $s6, $a0
    move $s7, $a1
   
    # FILA 0-1: Aleta trasera superior (negro)
    move $a0, $s6
    move $a1, $s7
    li $a2, 0x000000
    jal setPixel
   
    # FILA 2: Inicio cockpit (negro + rojo)
    addi $a1, $s7, 2
    move $a0, $s6
    addi $a0, $a0, -1
    li $a2, 0x000000
    jal setPixel
   
    move $a0, $s6
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 1
    jal setPixel
   
    # FILA 3: Cockpit/ventana (rojo + azul)
    addi $a1, $s7, 3
    move $a0, $s6
    addi $a0, $a0, -2
    li $a2, 0xFF0000
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, -1
    li $a2, 0x0000FF
    jal setPixel
   
    move $a0, $s6
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 1
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 2
    li $a2, 0xFF0000
    jal setPixel
   
    # FILA 4-5: Cuerpo principal ROJO
    li $t8, 2
drawBodyMain:
    move $a1, $s7
    addi $a1, $a1, 4
    add $a1, $a1, $t8
   
    move $a0, $s6
    addi $a0, $a0, -2
    li $a2, 0xB40000
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, -1
    li $a2, 0xFF0000
    jal setPixel
   
    move $a0, $s6
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 1
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 2
    li $a2, 0xB40000
    jal setPixel
   
    addi $t8, $t8, -1
    bgtz $t8, drawBodyMain
   
    # FILA 6: Transición (gris + rojo)
    addi $a1, $s7, 6
    move $a0, $s6
    addi $a0, $a0, -3
    li $a2, 0x464646
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, -2
    li $a2, 0x2E2E2E
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, -1
    li $a2, 0xFF0000
    jal setPixel
   
    move $a0, $s6
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 1
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 2
    li $a2, 0x2E2E2E
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 3
    li $a2, 0x464646
    jal setPixel
   
    # FILA 7-9: Zona media (grises + rojo central)
    li $t8, 3
drawMidSection:
    move $a1, $s7
    addi $a1, $a1, 7
    add $a1, $a1, $t8
   
    move $a0, $s6
    addi $a0, $a0, -3
    li $a2, 0x464646
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, -2
    li $a2, 0xFF0000
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, -1
    jal setPixel
   
    move $a0, $s6
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 1
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 2
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 3
    li $a2, 0x464646
    jal setPixel
   
    addi $t8, $t8, -1
    bgtz $t8, drawMidSection
   
    # FILA 10-11: Zona baja (rojo + azul detalles)
    li $t8, 2
drawLowerSection:
    move $a1, $s7
    addi $a1, $a1, 10
    add $a1, $a1, $t8
   
    move $a0, $s6
    addi $a0, $a0, -2
    li $a2, 0xFF0000
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, -1
    jal setPixel
   
    move $a0, $s6
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 1
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 2
    jal setPixel
   
    addi $t8, $t8, -1
    bgtz $t8, drawLowerSection
   
    # FILA 12-13: Aleta trasera inferior (azul)
    addi $a1, $s7, 12
    move $a0, $s6
    addi $a0, $a0, -1
    li $a2, 0x0000FF
    jal setPixel
   
    move $a0, $s6
    jal setPixel
   
    move $a0, $s6
    addi $a0, $a0, 1
    jal setPixel
   
    lw $ra, 0($sp)
    lw $s6, 4($sp)
    addi $sp, $sp, 8
    jr $ra

setPixel:
    # Validar coordenadas ANTES de calcular dirección
    bltz $a0, skipSetPixel      # Si X < 0, skip
    li $t0, 64
    bge $a0, $t0, skipSetPixel  # Si X >= 64, skip
    bltz $a1, skipSetPixel      # Si Y < 0, skip
    li $t0, 128
    bge $a1, $t0, skipSetPixel  # Si Y >= 128, skip
    
    # Ahora sí, calcular dirección (SEGURO)
    li $t0, 0x10008000
    move $t1, $a1
    sll $t1, $t1, 6         # Y * 64 (optimizado)
    add $t1, $t1, $a0
    sll $t1, $t1, 2
    add $t0, $t0, $t1
    sw $a2, 0($t0)

skipSetPixel:
    jr $ra

drawCarSprite32:
    addi $sp, $sp, -28
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
    sw $s5, 24($sp)
    
    move $s0, $a0        # X (centro del sprite)
    move $s1, $a1        # Y (top del sprite)
    
    # Calcular X inicial (sprite centrado)
    addi $s0, $s0, -16   # X inicial = X_centro - 16
    
    la $t0, animacion_choque_piedra_data
    li $s3, 0            # fila

loopY32:
    li $s4, 0            # columna
loopX32:
    lw $t5, 0($t0)       # color RGBA
    srl $t7, $t5, 24     # extraer alpha
    beqz $t7, skipPixel32 # si alpha=0, skip
    andi $t6, $t5, 0x00FFFFFF
   
    # Calcular X del píxel
    add $t8, $s0, $s4
    
    # CLIPPING HORIZONTAL - AGREGAR ESTO
    bltz $t8, skipPixel32        # Si X < 0, skip
    li $t9, 64
    bge $t8, $t9, skipPixel32    # Si X >= 64, skip
    
    # Calcular Y del píxel
    add $t9, $s1, $s3
    
    # CLIPPING VERTICAL
    bltz $t9, skipPixel32        # Si Y < 0, skip
    li $s2, 128
    bge $t9, $s2, skipPixel32    # Si Y >= 128, skip
    
    # Calcular dirección de píxel
    li $t7, 0x10008000
    mul $s2, $t9, 64             # Y * ancho
    add $s2, $s2, $t8            # + X
    sll $s2, $s2, 2              # * 4 bytes
    add $t7, $t7, $s2
    sw $t6, 0($t7)

skipPixel32:
    addi $t0, $t0, 4
    addi $s4, $s4, 1
    li $t9, 32
    blt $s4, $t9, loopX32

    addi $s3, $s3, 1
    li $t9, 32
    blt $s3, $t9, loopY32

    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    lw $s5, 24($sp)
    addi $sp, $sp, 28
    jr $ra

drawObstacle:
    addi $sp, $sp, -8
    sw $ra, 0($sp)
    sw $s6, 4($sp)
   
    move $s6, $a0        # Guardar X
    move $s7, $a1        # Guardar Y
    
    # Cargar tipo de obstáculo
    lw $t0, obsType
    beqz $t0, drawCono
    
    # Dibujar piedra
    move $a0, $s6
    move $a1, $s7
    la $a2, piedra_data
    jal drawSprite16Scaled
    j endDrawObstacle
    
drawCono:
    move $a0, $s6
    move $a1, $s7
    la $a2, cono_data
    jal drawSprite16Scaled
   
endDrawObstacle:
    lw $ra, 0($sp)
    lw $s6, 4($sp)
    addi $sp, $sp, 8
    jr $ra

drawSprite16Scaled:
    addi $sp, $sp, -32
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
    sw $s5, 24($sp)
    sw $s6, 28($sp)
    
    move $s0, $a0        # X destino
    move $s1, $a1        # Y destino
    move $s2, $a2        # Puntero a datos
    
    li $s3, 0            # fila destino (0-15)

loopYScaled:
    li $s4, 0            # columna destino (0-15)
    
loopXScaled:
    # Calcular offset en sprite original (tomar cada 2 píxeles)
    move $t0, $s3
    sll $t0, $t0, 1      # fila_src = fila_dst * 2
    move $t1, $s4
    sll $t1, $t1, 1      # col_src = col_dst * 2
    
    # Calcular índice en array: (fila_src * 32 + col_src) * 4
    mul $t2, $t0, 32
    add $t2, $t2, $t1
    sll $t2, $t2, 2
    add $t3, $s2, $t2
    
    lw $t5, 0($t3)       # Cargar píxel
    srl $t7, $t5, 24     # Extraer alpha
    beqz $t7, skipPixelScaled
    andi $t6, $t5, 0x00FFFFFF
    
    # Calcular posición destino
    add $t8, $s0, $s4    # X
    add $t9, $s1, $s3    # Y
    
    # Clipping
    bltz $t8, skipPixelScaled
    li $s5, 64
    bge $t8, $s5, skipPixelScaled
    bltz $t9, skipPixelScaled
    li $s5, 128
    bge $t9, $s5, skipPixelScaled
    
    # Dibujar
    li $t7, 0x10008000
    mul $s5, $t9, 64
    add $s5, $s5, $t8
    sll $s5, $s5, 2
    add $t7, $t7, $s5
    sw $t6, 0($t7)

skipPixelScaled:
    addi $s4, $s4, 1
    li $t0, 16
    blt $s4, $t0, loopXScaled

    addi $s3, $s3, 1
    li $t0, 16
    blt $s3, $t0, loopYScaled

    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    lw $s5, 24($sp)
    lw $s6, 28($sp)
    addi $sp, $sp, 32
    jr $ra

drawHearts:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    
    lw $t9, lives         # Cargar vidas actuales
    
    # Posición base: abajo a la derecha
    li $s6, 50            # X inicial (esquina derecha)
    li $s7, 120           # Y inicial (cerca del fondo)
    
    # Dibujar 3 corazones
    li $t8, 0             # Contador de corazón
    
heartLoop:
    bge $t8, 3, endHearts # Si ya dibujamos 3, terminar
    
    # Calcular X de este corazón (separados por 5 píxeles)
    move $a0, $s6
    li $t7, 5
    mult $t8, $t7
    mflo $t7
    sub $a0, $a0, $t7     # X = 50 - (i * 5)
    
    move $a1, $s7         # Y fija
    
    # Decidir color: rojo si vida activa, gris si perdida
    slt $t7, $t8, $t9     # ¿t8 < vidas? ? rojo : gris
    beqz $t7, grayHeart
    
    # Corazón ROJO (vida activa)
    li $a2, 0xFF0000
    j drawThisHeart
    
grayHeart:
    # Corazón GRIS (vida perdida)
    li $a2, 0x444444
    
drawThisHeart:
    # Dibujar un corazón simple de 3x3
    # Fila 1: . X .
    addi $a0, $a0, 1
    jal setPixel
    
    # Fila 2: X X X
    addi $a1, $a1, 1
    subi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    
    # Fila 3: . X .
    addi $a1, $a1, 1
    subi $a0, $a0, 1
    jal setPixel
    
    # Siguiente corazón
    addi $t8, $t8, 1
    j heartLoop
    
endHearts:
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

drawScore:
    addi $sp, $sp, -28
    sw $ra, 0($sp)
    sw $s0, 4($sp)
    sw $s1, 8($sp)
    sw $s2, 12($sp)
    sw $s3, 16($sp)
    sw $s4, 20($sp)
    sw $s5, 24($sp)
    
    lw $s0, score       # s0 = score original
    li $s2, 8           # s2 = X base
    li $s3, 8           # s3 = Y
    
    # Si score es 0, dibujar solo un 0
    beqz $s0, drawSingleZero
    
    # Extraer dígitos en un array temporal (máximo 8 dígitos)
    move $s1, $s0       # s1 = número temporal
    li $s4, 0           # s4 = cantidad de dígitos
    addi $sp, $sp, -32  # espacio para 8 dígitos
    
extractLoop:
    beqz $s1, printDigits
    
    # Extraer último dígito
    li $t0, 10
    divu $s1, $t0
    mfhi $t1            # t1 = dígito (resto)
    mflo $s1            # s1 = número / 10
    
    # Guardar dígito en stack
    sll $t2, $s4, 2     # offset = contador * 4
    add $t2, $t2, $sp
    sw $t1, 0($t2)
    
    addi $s4, $s4, 1
    j extractLoop
    
printDigits:
    # Ahora imprimir del último al primero (del más significativo al menos)
    li $s5, 0           # índice actual
    
printLoop:
    bge $s5, $s4, finishPrint
    
    # Calcular índice inverso
    sub $t0, $s4, $s5
    addi $t0, $t0, -1
    
    # Obtener dígito del stack
    sll $t0, $t0, 2
    add $t0, $t0, $sp
    lw $a2, 0($t0)
    
    # Dibujar dígito
    move $a0, $s2
    move $a1, $s3
    jal drawDigit
    
    # Siguiente posición X
    addi $s2, $s2, 4
    addi $s5, $s5, 1
    j printLoop
    
finishPrint:
    addi $sp, $sp, 32   # restaurar stack
    j endDrawScore

drawSingleZero:
    move $a0, $s2
    move $a1, $s3
    li $a2, 0
    jal drawDigit
    
endDrawScore:
    lw $ra, 0($sp)
    lw $s0, 4($sp)
    lw $s1, 8($sp)
    lw $s2, 12($sp)
    lw $s3, 16($sp)
    lw $s4, 20($sp)
    lw $s5, 24($sp)
    addi $sp, $sp, 28
    jr $ra

drawDigit:
    addi $sp, $sp, -4
    sw $ra, 0($sp)
    
    li $t7, 0xFFFF00    # Color amarillo
    
    # Switch según dígito
    beq $a2, 0, digit0
    beq $a2, 1, digit1
    beq $a2, 2, digit2
    beq $a2, 3, digit3
    beq $a2, 4, digit4
    beq $a2, 5, digit5
    beq $a2, 6, digit6
    beq $a2, 7, digit7
    beq $a2, 8, digit8
    beq $a2, 9, digit9
    j endDigit

digit0:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # Fila 0: XXX
    move $a0, $s6
    move $a1, $s7
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    # Fila 1-3: X X
    li $t8, 3
digit0_loop:
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $t8, $t8, -1
    bgtz $t8, digit0_loop
    # Fila 4: XXX
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit1:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    addi $a0, $a0, 1    # Centrado
    li $t8, 5
digit1_loop:
    jal setPixel
    addi $a1, $a1, 1
    addi $t8, $t8, -1
    bgtz $t8, digit1_loop
    j endDigit

digit2:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # Fila 0: XXX
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    # Fila 1: ..X
    addi $a1, $a1, 1
    jal setPixel
    # Fila 2: XXX
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    # Fila 3: X..
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    # Fila 4: XXX
    addi $a1, $a1, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit3:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # XXX, ..X, XXX, ..X, XXX
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit4:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # X.X, X.X, XXX, ..X, ..X
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    li $t8, 2
digit4_loop:
    addi $a1, $a1, 1
    jal setPixel
    addi $t8, $t8, -1
    bgtz $t8, digit4_loop
    j endDigit

digit5:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # XXX, X.., XXX, ..X, XXX
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit6:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # XXX, X.., XXX, X.X, XXX
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit7:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # XXX, ..X, ..X, ..X, ..X
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    li $t8, 4
digit7_loop:
    addi $a1, $a1, 1
    jal setPixel
    addi $t8, $t8, -1
    bgtz $t8, digit7_loop
    j endDigit

digit8:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # XXX, X.X, XXX, X.X, XXX
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    j endDigit

digit9:
    move $s6, $a0
    move $s7, $a1
    move $a2, $t7
    # XXX, X.X, XXX, ..X, XXX
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 2
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a1, $a1, 1
    jal setPixel
    addi $a1, $a1, 1
    move $a0, $s6
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel
    addi $a0, $a0, 1
    jal setPixel

endDigit:
    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

getRandom:
    addi $sp, $sp, -4
    sw $ra, 0($sp)

    # Mezclar semilla con frameCounter y dirección de stack
    lw $t0, randomSeed
    lw $t1, frameCounter
    addu $t0, $t0, $t1         # addu evita overflow con signo
    xor  $t0, $t0, $sp

    # LCG: next = (seed * 1664525 + 1013904223) mod 2^32
    li $t2, 1664525
    multu $t0, $t2
    mflo $t0                   # parte baja del producto
    li $t3, 1013904223
    addu $t0, $t0, $t3         # usar addu en lugar de addi (sin overflow)
    sw $t0, randomSeed

    # Mezclar bits altos y bajos
    srl $t4, $t0, 16
    xor $t0, $t0, $t4

    # Tomar módulo del rango pedido (0 .. $a0-1)
    divu $t0, $a0
    mfhi $v0

    lw $ra, 0($sp)
    addi $sp, $sp, 4
    jr $ra

.data
gameOverMsg: .asciiz "\n=== GAME OVER ===\nScore: "
newlineMsg: .asciiz "\n"
hitMsg: .asciiz "HIT! Lives: "
exitMsg: .asciiz "\nBye!\n"

scrollOffset: .word 0
frameCounter: .word 0
randomSeed: .word 0
obsType: .word 0

lineOffset: .word 0      # Offset para el scroll de líneas
lineSpeed: .word 1       # Velocidad de scroll

# Sprite para obstáculo que ralentiza (amarillo)
slow_obstacle_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

# ... (aquí van los sprites originales: animacion_choque_piedra_data, pista64_data, cono_data, piedra_data)
# Los sprites originales permanecen igual
# Sprite 32x32 del auto rojo
animacion_choque_piedra_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000a0, 0xff0000cd, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff0000dc, 0xff0000cd, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000be, 0xff0000dc, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000af, 0xff000091, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff0000cd, 0xff0000fa, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff2c2c2c, 0xff545454, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000be, 0xff0000fa, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff3c3c3c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000dc, 0xff0000a0, 0xff0000af, 0xff0000dc, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff2c2c2c, 0xff444444, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff343434, 0xff3c3c3c, 0xff000000, 0xff000000, 0x00000000, 0xff000000, 0xff0000cd, 0xff0000af, 0xff0000cd, 0xff0000dc, 0xff000000, 0x00000000, 0xff000000, 0xff000000, 0xff242424, 0xff343434, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff343434, 0xff000000, 0x00000000, 0xff000000, 0xff000000, 0xff0000cd, 0xff0000dc, 0xff3737ff, 0xff0000dc, 0xff000000, 0xff000000, 0x00000000, 0xff000000, 0xff3c3c3c, 0xff3c3c3c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0xff0000dc, 0xff000082, 0xff0000dc, 0xff0000a0, 0xff0000cd, 0xff0000dc, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff000000, 0xff3737ff, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000091, 0xff000000, 0xff000000, 0xff000000, 0xff181818, 0xff0000eb, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff000000, 0xff0000dc, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff3737ff, 0xff000000, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff0000dc, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff0000eb, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000091, 0xff0a0aff, 0xff0000fa, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff000082, 0xff0000cd, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff0000dc, 0xff0000fa, 0xff0000be, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff0000af, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff000091, 0xff0000be, 0xff0000dc, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff0000dc, 0xff0000be, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff2828ff, 0xff0000eb, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff444444, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff000000, 0xff0000a0, 0xff2828ff, 0xff000000, 0xff000000, 0xff0000dc, 0xff0000dc, 0xff000000, 0xff444444, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff0000dc, 0xff000000, 0xff000000, 0xff2828ff, 0xff000000, 0xff444444, 0xff444444, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff3c3c3c, 0xff242424, 0xff3c3c3c, 0xff000000, 0xff444444, 0xff000000, 0xff0000dc, 0xff080808, 0xff000000, 0xff0000fa, 0xff000000, 0xff444444, 0xff000000, 0xff3c3c3c, 0xff444444, 0xff343434, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff242424, 0xff545454, 0xff444444, 0xff000000, 0xff000000, 0xff282828, 0xff0000dc, 0xff0a0aff, 0xff0000eb, 0xff0000fa, 0xff000000, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff3c3c3c, 0xff3c3c3c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff343434, 0xff3c3c3c, 0xff3c3c3c, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff5c5c5c, 0xff2c2c2c, 0xff444444, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff444444, 0xff444444, 0xff242424, 0xff000000, 0xff000000, 0xff0000fa, 0xff0000dc, 0xff0000dc, 0xff2828ff, 0xff0000eb, 0xff0000fa, 0xff000000, 0xff000000, 0xff4c4c4c, 0xff3c3c3c, 0xff4c4c4c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0xff000000, 0xff000093, 0xff0000a2, 0xff0000b1, 0xff000093, 0xff000093, 0xff0000a2, 0xff000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

# Sprite 32x32 de pista y meta
pista64_data:
    .word
    0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xffffffff, 0xffffffff, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xffffffff, 0xffffffff,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da,
0xff0000da, 0xff0000da, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff5d5d5d, 0xff0000da, 0xff0000da

# Sprite de cono 32x32
cono_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff953d07, 0xffe05b0c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xfff7f7f7, 0xffefefef, 0xffbfbfbf, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffefefef, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffa44308, 0xffa44308, 0xffb34909, 0xff953d07, 0xffe05b0c, 0xffb34909, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffb34909, 0xff863706, 0xff953d07, 0xff863706, 0xffc24f0a, 0xff953d07, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff953d07, 0xffa44308, 0xff953d07, 0xff863706, 0xff682b04, 0xffa44308, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffb34909, 0xff953d07, 0xff773105, 0xffa44308, 0xff863706, 0xffe05b0c, 0xffe05b0c, 0xffc24f0a, 0xffb34909, 0xffe05b0c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffa44308, 0xffc24f0a, 0xffb34909, 0xff953d07, 0xffc24f0a, 0xff592503, 0xffc24f0a, 0xffe05b0c, 0xffe05b0c, 0xffb34909, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffefefef, 0xffdfdfdf, 0xffd7d7d7, 0xffe7e7e7, 0xffe7e7e7, 0xffafafaf, 0xffffffff, 0xffefefef, 0xfff7f7f7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffcfcfcf, 0xfff7f7f7, 0xffd7d7d7, 0xffcfcfcf, 0xff979797, 0xffefefef, 0xffefefef, 0xffffffff, 0xffffffff, 0xffffffff, 0xffefefef, 0xffcfcfcf, 0xffffffff, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffe7e7e7, 0xffafafaf, 0xffe7e7e7, 0xffefefef, 0xffe7e7e7, 0xffffffff, 0xffdfdfdf, 0xfff7f7f7, 0xffffffff, 0xffe7e7e7, 0xffdfdfdf, 0xfff7f7f7, 0xffffffff, 0xffffffff, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffe05b0c, 0xffe05b0c, 0xff773105, 0xffa44308, 0xffc24f0a, 0xffa44308, 0xffc24f0a, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xffe05b0c, 0xffa44308, 0xffe05b0c, 0xff4a1f03, 0xffc24f0a, 0xffe05b0c, 0xffa44308, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffe05b0c, 0xffb34909, 0xffe05b0c, 0xffe05b0c, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffffffff, 0xffe7e7e7, 0xffefefef, 0xffd7d7d7, 0xffc7c7c7, 0xffffffff, 0xffdfdfdf, 0xffefefef, 0xffffffff, 0xffffffff, 0xffe7e7e7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffcfcfcf, 0xffffffff, 0xffffffff, 0xffffffff, 0xffe7e7e7, 0xffffffff, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xffffffff, 0xffd7d7d7, 0xffffffff, 0xffefefef, 0xffcfcfcf, 0xfff7f7f7, 0xffe7e7e7, 0xffdfdfdf, 0xffffffff, 0xffffffff, 0xffffffff, 0xffcfcfcf, 0xffffffff, 0xfff7f7f7, 0xffe7e7e7, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0xff000000, 0xffc34000, 0xffb43b00, 0xffc34000, 0xffff5400, 0xff872c00, 0xfff04f00, 0xffc34000, 0xffc34000, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffff5400, 0xffb43b00, 0xffff5400, 0xffff5400, 0xff000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000

# Sprite de piedra 32x32
piedra_data:
    .word
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff6f6f6f, 0xff5f5f5f, 0xff474747, 0xff575757, 0xff4f4f4f, 0xff0f0f0f, 0xff5f5f5f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff000000, 0xff676767, 0xff5f5f5f, 0xff9f9f9f, 0xffb7b7b7, 0xff7f7f7f, 0xff7f7f7f, 0xff676767, 0xff676767, 0xff6f6f6f, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff474747, 0xff272727, 0xff6f6f6f, 0xff9f9f9f, 0xffb7b7b7, 0xffdfdfdf, 0xff979797, 0xff8f8f8f, 0xff6f6f6f, 0xffd7d7d7, 0xff8f8f8f, 0xff979797, 0xff7f7f7f, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff7f7f7f, 0xff8f8f8f, 0xff7f7f7f, 0xff7f7f7f, 0xff878787, 0xff8f8f8f, 0xff8f8f8f, 0xff777777, 0xff878787, 0xff8f8f8f, 0xff979797, 0xff9f9f9f, 0xff979797, 0xff878787, 0xff7f7f7f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff777777, 0xff878787, 0xff676767, 0xff8f8f8f, 0xff7f7f7f, 0xff878787, 0xff5f5f5f, 0xff878787, 0xff8f8f8f, 0xff8f8f8f, 0xff979797, 0xff8f8f8f, 0xffc7c7c7, 0xff8f8f8f, 0xffa7a7a7, 0xffa7a7a7, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff777777, 0xff8f8f8f, 0xff676767, 0xff8f8f8f, 0xff777777, 0xff8f8f8f, 0xff6f6f6f, 0xff878787, 0xff7f7f7f, 0xff8f8f8f, 0xffa7a7a7, 0xff8f8f8f, 0xffcfcfcf, 0xff8f8f8f, 0xffbfbfbf, 0xff7f7f7f, 0xff8f8f8f, 0xff575757, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff878787, 0xff6f6f6f, 0xff8f8f8f, 0xff8f8f8f, 0xff575757, 0xff8f8f8f, 0xff8f8f8f, 0xff7f7f7f, 0xff878787, 0xff8f8f8f, 0xffafafaf, 0xff8f8f8f, 0xff8f8f8f, 0xffbfbfbf, 0xff8f8f8f, 0xff8f8f8f, 0xff3f3f3f, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff8f8f8f, 0xff7f7f7f, 0xff8f8f8f, 0xff676767, 0xff6f6f6f, 0xff7f7f7f, 0xff878787, 0xff8f8f8f, 0xff5f5f5f, 0xff7f7f7f, 0xff676767, 0xff8f8f8f, 0xff979797, 0xff8f8f8f, 0xff7f7f7f, 0xff676767, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff8f8f8f, 0xff878787, 0xff777777, 0xff7f7f7f, 0xff8f8f8f, 0xff8f8f8f, 0xff8f8f8f, 0xff8f8f8f, 0xff7f7f7f, 0xff8f8f8f, 0xff8f8f8f, 0xff8f8f8f, 0xff9f9f9f, 0xff777777, 0xff6f6f6f, 0xff7f7f7f, 0xff8f8f8f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff8f8f8f, 0xff7f7f7f, 0xff8f8f8f, 0xff6f6f6f, 0xff676767, 0xff5f5f5f, 0xff979797, 0xff979797, 0xff777777, 0xff979797, 0xff8f8f8f, 0xff5f5f5f, 0xff8f8f8f, 0xff7f7f7f, 0xff878787, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff878787, 0xff777777, 0xff8f8f8f, 0xff777777, 0xff676767, 0xff8f8f8f, 0xffa7a7a7, 0xff8f8f8f, 0xff777777, 0xff8f8f8f, 0xff7f7f7f, 0xff8f8f8f, 0xff6f6f6f, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xff000000, 0xff000000, 0xff080808, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
    0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000
